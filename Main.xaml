<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="740,734" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="33">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart DisplayName="Excel Challenge" sap:VirtualizedContainerService.HintSize="664,669.333333333333" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="Challenge" />
      <Variable x:TypeArguments="x:String" Name="ChallengeOption" />
      <Variable x:TypeArguments="x:String" Name="ChallengeComplete" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.1666666666667 300,145.333333333333</av:PointCollection>
        <x:Double x:Key="Height">633.33333333333326</x:Double>
        <x:Double x:Key="Width">630</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,145.333333333333</av:Point>
          <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,214.666666666667 300,255.333333333333</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Challenge Selection" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InputDialog OptionsString="{x:Null}" DisplayName="Challenge Input" sap:VirtualizedContainerService.HintSize="726,299.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Select a Challenge" Options="[{&quot;Challenge 1&quot;,&quot;Challenge 2&quot;}]" Title="Challenge Selection">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:String">[Challenge]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <If Condition="[Challenge =&quot;Challenge 1&quot;]" sap:VirtualizedContainerService.HintSize="726,555.333333333333" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Sequence DisplayName="Challenge 1 Selected" sap:VirtualizedContainerService.HintSize="376,391.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InputDialog OptionsString="{x:Null}" DisplayName="Challenge 1 Options" sap:VirtualizedContainerService.HintSize="334,299.333333333333" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Select a Challenge" Options="[{&quot;Keep Excel Open&quot;,&quot;Keep Excel Closed&quot;,&quot;Use Excel Formula&quot;}]" Title="Select Challenge 1 Options">
                <ui:InputDialog.Result>
                  <OutArgument x:TypeArguments="x:String">[ChallengeOption]</OutArgument>
                </ui:InputDialog.Result>
              </ui:InputDialog>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Challenge 2 Selected" sap:VirtualizedContainerService.HintSize="304,154" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ChallengeOption]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Challenge 2</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,255.333333333333</av:Point>
              <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,324.666666666667 300,354.666666666667 320,354.666666666667 320,413.666666666667</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Selected Challenge Execution" sap:VirtualizedContainerService.HintSize="634,4704" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[ChallengeOption]" sap:VirtualizedContainerService.HintSize="592,4612" sap2010:WorkflowViewState.IdRef="Switch`1_1">
              <Sequence x:Key="Keep Excel Open" DisplayName="Keeps the Excel open and writes the results in real-time" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="counter">
                    <Variable.Default>
                      <Literal x:TypeArguments="x:Int32" Value="1" />
                    </Variable.Default>
                  </Variable>
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="510,1257.33333333333" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="data\Sample Columns.xlsx">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,1148.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataTable" Name="SumDT" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelReadRange AddHeaders="False" DataTable="[SumDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="434,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
                          <ui:ExcelReadRange.Range>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelReadRange.Range>
                        </ui:ExcelReadRange>
                        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[SumDT]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,958" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,842.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:Double" Name="ColA" />
                                  <Variable x:TypeArguments="x:Double" Name="ColB" />
                                  <Variable x:TypeArguments="x:Double" Name="SumAB" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DisplayName="Get Row Item Col A" sap:VirtualizedContainerService.HintSize="334,190" sap2010:WorkflowViewState.IdRef="GetRowItem_1" Row="[Row]">
                                  <ui:GetRowItem.Value>
                                    <OutArgument x:TypeArguments="x:Double">[ColA]</OutArgument>
                                  </ui:GetRowItem.Value>
                                </ui:GetRowItem>
                                <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="1" DisplayName="Get Row Item Col B" sap:VirtualizedContainerService.HintSize="334,190" sap2010:WorkflowViewState.IdRef="GetRowItem_2" Row="[Row]">
                                  <ui:GetRowItem.Value>
                                    <OutArgument x:TypeArguments="x:Double">[ColB]</OutArgument>
                                  </ui:GetRowItem.Value>
                                </ui:GetRowItem>
                                <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[SumAB]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[ColA+ColB]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ExcelWriteCell Cell="[&quot;C&quot;+counter.ToString]" DisplayName="Write to Cell C" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Sheet1" Text="[SumAB.ToString]" />
                                <Assign DisplayName="loop through cells" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                        </ui:ForEachRow>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </Sequence>
              <Sequence x:Key="Keep Excel Closed" DisplayName="Keep Excel closed - write values to another excel" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="InputDT" />
                  <Variable x:TypeArguments="sd:DataTable" Name="ResultDT" />
                  <Variable x:TypeArguments="x:Double" Name="RowA" />
                  <Variable x:TypeArguments="x:Double" Name="RowB" />
                  <Variable x:TypeArguments="x:Double" Name="RowC" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ReadRange AddHeaders="False" DataTable="[InputDT]" DisplayName="Read Range Values " sap:VirtualizedContainerService.HintSize="434,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="data\Sample Columns.xlsx">
                  <ui:ReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ReadRange.Range>
                </ui:ReadRange>
                <ui:BuildDataTable DataTable="[ResultDT]" DisplayName="Build Data Table Results" sap:VirtualizedContainerService.HintSize="434,58.6666666666667" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;A&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;B&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;C&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[InputDT]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,962.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,844" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DisplayName="Get Row Item A" sap:VirtualizedContainerService.HintSize="334,190" sap2010:WorkflowViewState.IdRef="GetRowItem_3" Row="[Row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:Double">[RowA]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="1" DisplayName="Get Row Item B" sap:VirtualizedContainerService.HintSize="334,190" sap2010:WorkflowViewState.IdRef="GetRowItem_4" Row="[Row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:Double">[RowB]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[RowC]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">[RowA+RowB]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{RowA,RowB,RowC}]" DataTable="[ResultDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,190" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,287.333333333333" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" WorkbookPath="data\Result.xlsx">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,178.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteRange AddHeaders="False" DataTable="[ResultDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1">
                          <ui:ExcelWriteRange.StartingCell>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelWriteRange.StartingCell>
                        </ui:ExcelWriteRange>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </Sequence>
              <Sequence x:Key="Use Excel Formula" DisplayName="Use Excel Formula" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Default="1" Name="counter" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="510,797.333333333333" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000" WorkbookPath="data\Sample Columns.xlsx">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Write sum to cell" sap:VirtualizedContainerService.HintSize="476,688.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataTable" Name="FormulaDT" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelReadRange AddHeaders="True" DataTable="[FormulaDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="434,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" SheetName="Sheet1">
                          <ui:ExcelReadRange.Range>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelReadRange.Range>
                        </ui:ExcelReadRange>
                        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[FormulaDT]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,498" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,382.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:Int32" Name="rowNum" />
                                  <Variable x:TypeArguments="x:Int32" Name="RowTotal" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_10">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[rowNum]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[FormulaDT.Rows.IndexOf(Row) + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_11">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[RowTotal]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[FormulaDT.RowCount+1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ExcelWriteCell Cell="[&quot;C1:C&quot;+RowTotal.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Sheet1" Text="=SUM(A1:B1)" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                        </ui:ForEachRow>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </Sequence>
              <Sequence x:Key="Challenge 2" DisplayName="Challenge 2 Calculate Percentage" sap:VirtualizedContainerService.HintSize="552,3900.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_31">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="CashPayDT" />
                  <Variable x:TypeArguments="sd:DataTable" Name="CardPayDT" />
                  <Variable x:TypeArguments="sd:DataTable" Name="ExpensesDT" />
                  <Variable x:TypeArguments="x:Int32" Name="xpense2RowIndexNumber" />
                  <Variable x:TypeArguments="sd:DataTable" Name="Expenses2DT" />
                  <Variable x:TypeArguments="x:Int32" Name="Expense2Total" />
                  <Variable x:TypeArguments="x:Int32" Default="0" Name="AllExpensesTotal" />
                  <Variable x:TypeArguments="x:Int32" Name="Expense2RowNumber" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ReadRange AddHeaders="True" DataTable="[cashPayDT]" DisplayName="Read Range - excel file to datatable" sap:VirtualizedContainerService.HintSize="510,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_4" SheetName="Sheet1" WorkbookPath="data\CashPayments.xlsx">
                  <ui:ReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ReadRange.Range>
                </ui:ReadRange>
                <ui:ReadRange AddHeaders="True" DataTable="[CardPayDT]" DisplayName="Read Range - excel to datatable" sap:VirtualizedContainerService.HintSize="510,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_5" SheetName="Sheet1" WorkbookPath="data\CardPayments.xlsx">
                  <ui:ReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ReadRange.Range>
                </ui:ReadRange>
                <ui:MergeDataTable sap2010:Annotation.AnnotationText="both excel sheets into one so totals and percentages can be calculated" Destination="[CardPayDT]" DisplayName="Combine the Data Tables" sap:VirtualizedContainerService.HintSize="510,135.333333333333" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add" Source="[cashPayDT]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MergeDataTable>
                <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" sap2010:Annotation.AnnotationText="all same expenses together" ColumnName="Expense" DataTable="[CardPayDT]" DisplayName="Group Payments" sap:VirtualizedContainerService.HintSize="510,244.666666666667" sap2010:WorkflowViewState.IdRef="SortDataTable_1" Order="Ascending" OutputDataTable="[CardPayDT]" SortOrder="Ascending">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:SortDataTable>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[CardPayDT]" DisplayName="For Each Row - Total Expense Calculation" sap:VirtualizedContainerService.HintSize="510,272.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="rowValue" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,154" sap2010:WorkflowViewState.IdRef="Sequence_27">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_14">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[allExpensesTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[allExpensesTotal+CInt(rowValue("Value"))]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
                <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" sap2010:Annotation.AnnotationText="sub-totals of each expense item" AutoIncrement="False" ColumnName="Sub-value Per Expense" DataTable="[CardPayDT]" DisplayName="Add Data Column " sap:VirtualizedContainerService.HintSize="510,190" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" MaxLength="100" Unique="False">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:AddDataColumn>
                <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="%age Of Total Expense" DataTable="[CardPayDT]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="510,190" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" MaxLength="100" Unique="False" />
                <Assign sap2010:Annotation.AnnotationText="items to a new datatable holding those unique expense items" DisplayName="Assign " sap:VirtualizedContainerService.HintSize="510,62" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[ExpensesDT]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[CardPayDT.DefaultView.ToTable(true,"Expense")]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[ExpensesDT]" DisplayName="For Each Row - in the unique expenses dt" sap:VirtualizedContainerService.HintSize="510,1433.33333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="rowUniqueExpenses" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,1314.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_29">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:FilterDataTable sap2010:Annotation.AnnotationText="with the same name in order to total the sub-item costs" DataTable="[CardPayDT]" DisplayName="Filter Data Table - clubbing the expense items..." FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,162.666666666667" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[Expenses2DT]" SelectColumnsMode="Keep">
                          <ui:FilterDataTable.Filters>
                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                <ui:FilterOperationArgument.Column>
                                  <InArgument x:TypeArguments="x:String">["Expense"]</InArgument>
                                </ui:FilterOperationArgument.Column>
                                <ui:FilterOperationArgument.Operand>
                                  <InArgument x:TypeArguments="x:Object">[rowUniqueExpenses("Expense")]</InArgument>
                                </ui:FilterOperationArgument.Operand>
                              </ui:FilterOperationArgument>
                            </scg:List>
                          </ui:FilterDataTable.Filters>
                          <ui:FilterDataTable.SelectColumns>
                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                              <InArgument x:TypeArguments="x:String">["Expense"]</InArgument>
                              <InArgument x:TypeArguments="x:String">["Value"]</InArgument>
                            </scg:List>
                          </ui:FilterDataTable.SelectColumns>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:FilterDataTable>
                        <Assign sap2010:Annotation.AnnotationText="the variable to hold the sub-expenses" DisplayName="Assign - initializing and resetting..." sap:VirtualizedContainerService.HintSize="434,62" sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[Expense2Total]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[Expenses2DT]" DisplayName="For Each Row - totalling each sub-expense" sap:VirtualizedContainerService.HintSize="434,272.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="rowSubExpense" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,154" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign - adding up each sub-expense" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_17">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[Expense2Total]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[Expense2Total+CInt(rowSubExpense("Value"))]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                        </ui:ForEachRow>
                        <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" sap2010:Annotation.AnnotationText="find the row number of the expense item" DataTable="[CardPayDT]" DisplayName="Lookup Data Table - to..." sap:VirtualizedContainerService.HintSize="434,299.333333333333" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnName="Expense" LookupValue="[rowUniqueExpenses(&quot;Expense&quot;).ToString]" RowIndex="[xpense2RowIndexNumber]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LookupDataTable>
                        <Assign sap2010:Annotation.AnnotationText="expense item" DisplayName="Assign - the last row number of the... " sap:VirtualizedContainerService.HintSize="434,62" sap2010:WorkflowViewState.IdRef="Assign_18">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[Expense2RowNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[(xpense2RowIndexNumber+Expenses2DT.Rows.Count)-1]</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                        <Assign sap2010:Annotation.AnnotationText="sub-expense into the dt" DisplayName="Assign - the sub-total of the..." sap:VirtualizedContainerService.HintSize="434,62" sap2010:WorkflowViewState.IdRef="Assign_19">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[CardPayDT( Expense2RowNumber)("Sub-value Per Expense")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[Expense2Total]</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                        <Assign sap2010:Annotation.AnnotationText="expense into the dt " DisplayName="Assign - the percentage of the sub-..." sap:VirtualizedContainerService.HintSize="434,62" sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[CardPayDT.Rows(Expense2RowNumber).Item("%age Of Total Expense")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[CStr((Expense2Total/allExpensesTotal)*100)+"%"]</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;&quot;}]" DataTable="[CardPayDT]" DisplayName="Add Data Row - blank row" sap:VirtualizedContainerService.HintSize="510,190" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="for total losses" ArrayRow="[{&quot;Total losses = &quot;,&quot;&quot;,allExpensesTotal}]" DataTable="[CardPayDT]" DisplayName="Add Data Row - with text..." sap:VirtualizedContainerService.HintSize="510,190" sap2010:WorkflowViewState.IdRef="AddDataRow_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:AddDataRow>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="510,287.333333333333" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" InstanceCachePeriod="3000" Visible="False" WorkbookPath="data\CardPayments.xlsx">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,178.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_30">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteRange AddHeaders="True" DataTable="[CardPayDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Sheet1" StartingCell="A1" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </Sequence>
            </Switch>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">220,413.666666666667</av:Point>
                  <av:Size x:Key="ShapeSize">200,52.6666666666667</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">320,466.333333333333 320,546.666666666667</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InputDialog OptionsString="{x:Null}" DisplayName="Challenge Completed" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="Select another Challenge?" Options="[{&quot;Yes&quot;,&quot;No&quot;}]" Title="Challenge Completed">
                <ui:InputDialog.Result>
                  <OutArgument x:TypeArguments="x:String">[ChallengeComplete]</OutArgument>
                </ui:InputDialog.Result>
              </ui:InputDialog>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID2" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="78.6666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                  <FlowDecision.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="ChallengeComplete=&quot;Yes&quot;" />
                  </FlowDecision.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">280.666666666667,546.666666666667</av:Point>
                      <av:Size x:Key="ShapeSize">78.6666666666667,86.6666666666667</av:Size>
                      <av:PointCollection x:Key="TrueConnector">280.666666666667,590 170,590 170,180 200,180</av:PointCollection>
                      <av:PointCollection x:Key="FalseConnector">359.333333333333,590 430,590</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">430,563.666666666667</av:Point>
                          <av:Size x:Key="ShapeSize">200,52.6666666666667</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="End" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[&quot;Thank you&quot;]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MessageBox>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
  </Flowchart>
</Activity>